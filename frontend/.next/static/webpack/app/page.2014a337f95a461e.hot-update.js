"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/Redux/PostsSlice.ts":
/*!*************************************!*\
  !*** ./src/lib/Redux/PostsSlice.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addComment: function() { return /* binding */ addComment; },\n/* harmony export */   getMyData: function() { return /* binding */ getMyData; },\n/* harmony export */   getMyPosts: function() { return /* binding */ getMyPosts; },\n/* harmony export */   getPosts: function() { return /* binding */ getPosts; },\n/* harmony export */   getSinglePost: function() { return /* binding */ getSinglePost; },\n/* harmony export */   resetSinglePost: function() { return /* binding */ resetSinglePost; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _lib_axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/axios */ \"(app-pages-browser)/./src/lib/axios.ts\");\n\n // uses baseURL + auto-token\nconst initialState = {\n    allPosts: null,\n    myPosts: null,\n    isLoading: false,\n    isError: false,\n    postComments: null,\n    singlePost: null,\n    myInfo: null,\n    myId: null\n};\n// ✅ Get single post by ID\nconst getSinglePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"posts/getSinglePost\", async (id)=>{\n    const response = await _lib_axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/posts/\".concat(id));\n    return response.data;\n});\n// ✅ Get authenticated user's profile\nconst getMyData = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"posts/getMyData\", async ()=>{\n    const response = await _lib_axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/user/profile\");\n    return response.data;\n});\n// ✅ Get my own posts\nconst getMyPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"posts/getMyPosts\", async (param)=>{\n    let { id, limit = 25 } = param;\n    const response = await _lib_axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/users/\".concat(id, \"/posts?limit=\").concat(limit));\n    return response.data.posts.reverse();\n});\n// ✅ Get timeline posts or all posts\nconst getPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"posts/getPosts\", async function() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 25;\n    const response = await _lib_axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/posts?limit=\".concat(limit));\n    return response.data.posts.reverse();\n});\n// ✅ Add a comment to a post\nconst addComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"posts/addComment\", async (data)=>{\n    const response = await _lib_axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/comments\", data);\n    return response.data;\n});\n// SLICE\nconst postsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createSlice)({\n    name: \"posts\",\n    initialState,\n    reducers: {\n        resetSinglePost: (state)=>{\n            state.singlePost = null;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(getPosts.pending, (state)=>{\n            state.isLoading = true;\n            state.isError = false;\n        }).addCase(getPosts.fulfilled, (state, action)=>{\n            state.allPosts = action.payload;\n            state.isLoading = false;\n        }).addCase(getPosts.rejected, (state)=>{\n            state.isLoading = false;\n            state.isError = true;\n        });\n        builder.addCase(addComment.pending, (state)=>{\n            state.isLoading = true;\n            state.isError = false;\n        }).addCase(addComment.fulfilled, (state)=>{\n            state.isLoading = false;\n            state.isError = false;\n        }).addCase(addComment.rejected, (state)=>{\n            state.isLoading = false;\n            state.isError = true;\n        });\n        builder.addCase(getSinglePost.pending, (state)=>{\n            state.isLoading = true;\n            state.isError = false;\n        }).addCase(getSinglePost.fulfilled, (state, action)=>{\n            state.singlePost = action.payload.post;\n            state.isLoading = false;\n        }).addCase(getSinglePost.rejected, (state)=>{\n            state.isLoading = false;\n            state.isError = true;\n        });\n        builder.addCase(getMyPosts.pending, (state)=>{\n            state.isLoading = true;\n            state.isError = false;\n        }).addCase(getMyPosts.fulfilled, (state, action)=>{\n            state.myPosts = action.payload;\n            state.isLoading = false;\n        }).addCase(getMyPosts.rejected, (state)=>{\n            state.isLoading = false;\n            state.isError = true;\n        });\n        builder.addCase(getMyData.pending, (state)=>{\n            state.isLoading = true;\n            state.isError = false;\n        }).addCase(getMyData.fulfilled, (state, action)=>{\n            console.log(\"\\uD83C\\uDFAF getMyData success, user:\", action.payload.user);\n            state.myId = action.payload.user._id;\n            state.myInfo = action.payload;\n        }).addCase(getMyData.rejected, (state)=>{\n            state.isLoading = false;\n            state.isError = true;\n        });\n    }\n});\nconst { resetSinglePost } = postsSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (postsSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/Redux/PostsSlice.ts\n"));

/***/ })

});